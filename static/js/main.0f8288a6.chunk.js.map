{"version":3,"sources":["game.js","App.js","index.js"],"names":["colors","attemptArr","totalAttempt","totalCountArr","color1","background","color2","color3","color4","color5","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gameStart","length","setState","initialState","defaultsState","gameOn","generateRandom","randomArray","count","i","Math","floor","random","push","console","log","solution","submitAttempt","tempSolution","tempAttempt","state","option1","value","option2","option3","option4","option5","unshift","hiddenView","countTotal","blackCount","whiteCount","includes","j","resetColor","onChange","e","val","target","type","checked","changedBit","defineProperty","name","isChecked","position","className","_i3","pos","selectColor","id","objectSpread","react_default","a","createElement","onClick","map","color","style","reversed","arrays","score","Component","App","game_Game","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0f8288a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n//import Button from '@material-ui/core/Button';\nconst colors = ['red', 'orange', 'yellow', 'green', 'blue', 'black', 'ivory', 'sienna'];\n\nlet attemptArr = [];\nlet totalAttempt = [];\nlet totalCountArr = [];\n\n\nlet color1 = {background:'transparent'};\nlet color2 = {background:'transparent'};\nlet color3 = {background:'transparent'};\nlet color4 = {background:'transparent'};\nlet color5 = {background:'transparent'};\nlet winningMsg = 'You won!';\n\nexport default class Game extends Component {\n  constructor(props){\n    super(props);\n    this.defaultsState = {\n      hiddenView: false,\n      solution: [],\n      option1: {value: 'transparent', checked: false},\n      option2: {value: 'transparent', checked: false},\n      option3: {value: 'transparent', checked: false},\n      option4: {value: 'transparent', checked: false},\n      option5: {value: 'transparent', checked: false},\n      gameOn: false,\n    };\n    const initialState = this.defaultsState;\n    this.state = {...initialState};\n  }\n\n  gameStart = () => {\n    if(totalAttempt.length > 0){\n      this.setState({initialState: this.defaultsState});\n      totalAttempt = [];\n      totalCountArr = [];\n    }\n    this.setState({gameOn: true});\n    this.generateRandom();\n  }\n    generateRandom = () => {\n        let randomArray = [];\n        let count = 0;\n        while(count < 5) {\n            let i = Math.floor(Math.random() * (colors.length));\n            randomArray.push(colors[i]);\n            count++;\n        }\n        console.log(randomArray);\n        this.setState({solution: randomArray});\n        }\n\n    submitAttempt = () => {\n      let tempSolution = [];\n      let tempAttempt = [];\n\n        if(this.state.option1.value !== 'transparent' && this.state.option2.value !== 'transparent' && this.state.option3.value !== 'transparent' && this.state.option4.value !== 'transparent'   && this.state.option5.value !== 'transparent'){\n          attemptArr = [];\n          attemptArr.push(this.state.option1.value);\n          attemptArr.push(this.state.option2.value);\n          attemptArr.push(this.state.option3.value);\n          attemptArr.push(this.state.option4.value);\n          attemptArr.push(this.state.option5.value);\n          console.log('attemptArr', attemptArr)\n          totalAttempt.unshift(attemptArr);\n          if(this.state.solution[0]===attemptArr[0] && this.state.solution[1]===attemptArr[1] && this.state.solution[2]===attemptArr[2] && this.state.solution[3]===attemptArr[3] && this.state.solution[4]===attemptArr[4]){\n            this.setState({hiddenView: true});\n            console.log('you win');\n          }\n          else {\n            let countTotal = [];\n            let blackCount = '';\n            let whiteCount = '';\n            let noScore = 'orangered';\n\n            for(let i = 0; i < 5; i++){\n              tempSolution.push(this.state.solution[i]);\n              tempAttempt.push(attemptArr[i]);\n            }\n            for(let i = 0; i < 5; i++){\n              if(tempSolution[i] === tempAttempt[i]){\n                tempSolution[i] = 'used-blk';\n                tempAttempt[i] = 'checked';\n                blackCount = 'black'; \n                countTotal.push(blackCount);\n              }\n            }\n\n            for(let i = 0; i < 5; i++){\n              if(tempSolution.includes(tempAttempt[i])){\n                for(let j = 0; j < 5; j++){\n                  if(tempSolution[j] === tempAttempt[i]){\n                    tempSolution[j] = 'found-white';\n                    tempAttempt[i] = 'checked';\n                    whiteCount = 'ivory';\n                    countTotal.push(whiteCount);\n                    break;\n                  }\n                }\n              }\n            }\n\n            if(countTotal.length === 0){\n              countTotal.push(noScore);\n            }\n            totalCountArr.unshift(countTotal);\n          }\n        }\n          this.resetColor();\n    }\n       \n    \n    onChange = (e) => {\n        const val =\n        e.target.type === \"checkbox\"\n          ? e.target.checked\n          : e.target.value;\n    \n      const changedBit = {\n        [e.target.name]: val\n      };\n      this.setState(changedBit);\n    }\n    isChecked = (e) => {\n        let position = ['pos1', 'pos2', 'pos3', 'pos4', 'pos5'];\n        let val = e.target.className;\n        for(let pos of position){\n          if(pos === val){\n            val = pos;\n            \n            if(val === 'pos1' && this.state.option1.checked === false){\n              this.setState({option1: {checked: true}});\n            }\n            if(val === 'pos2' && this.state.option2.checked === false){\n              this.setState({option2: {checked: true}});\n            }\n            if(val === 'pos3' && this.state.option3.checked === false){\n              this.setState({option3: {checked: true}});\n            }\n            if(val === 'pos4' && this.state.option4.checked === false){\n              this.setState({option4: {checked: true}});\n            }\n            if(val === 'pos5' && this.state.option5.checked === false){\n              this.setState({option5: {checked: true}});\n            }\n          }\n        }\n      }\n    selectColor = (e) => {\n      let val = e.target.id\n      if(this.state.option1.checked === true){\n        this.setState({option1: {value: val, checked: false}});\n        color1 = {background: val};\n      }\n      if(this.state.option2.checked === true){\n        this.setState({option2: {value: val, checked: false}});\n        color2 = {background: val};\n      }\n      if(this.state.option3.checked === true){\n        this.setState({option3: {value: val, checked: false}});\n        color3 = {background: val};\n      }\n      if(this.state.option4.checked === true){\n        this.setState({option4: {value: val, checked: false}});\n        color4 = {background: val};\n      }\n      if(this.state.option5.checked === true){\n        this.setState({option5: {value: val, checked: false}});\n        color5 = {background: val};\n      }   \n    }\n\n    resetColor = () => {\n      this.setState({option1: {value: 'transparent', checked: false}});\n      color1 = {background: 'transparent'};\n      this.setState({option2: {value: 'transparent', checked: false}});\n      color2 = {background: 'transparent'};\n      this.setState({option3: {value: 'transparent', checked: false}});\n      color3 = {background: 'transparent'};\n      this.setState({option4: {value: 'transparent', checked: false}});\n      color4 = {background: 'transparent'};\n      this.setState({option5: {value: 'transparent', checked: false}});\n      color5 = {background: 'transparent'};\n    }\n\n    render() {\n\n      return (\n        <div className='main-container'>\n          <h2>Master Mind</h2>          \n          <button className='new-game-button' onClick={this.gameStart}>new game</button>\n          <button className='submit-button' onClick={this.submitAttempt}>submit</button>\n\n          <div className='game-board-container'>\n\n                {this.state.hiddenView && <div className='hidden-solution'>{this.state.solution.map(color => <div style={{background: color}} className='colorPosition'></div>)}<h2>{winningMsg}</h2></div>}\n                \n          <div className='attempt-container'>\n            <ol reversed={true} className='attempt-row'>{totalAttempt.map(arrays => \n              <li>{arrays.map(color => <div className='colorPosition' style={{background: color}}></div> )}</li>)}\n            </ol>\n          </div>\n          <div className='attempt-container'>\n            <ul className='attempt-row'>{totalCountArr.map(count => \n              <li>{count.map(score => \n                <div className='score' style={{background: score}}></div>)}\n              </li>)}\n            </ul>\n          </div>\n          {/* <Divider/> */}\n          <div className='guess-container'>\n            {this.state.gameOn && <form onChange={this.isChecked}>\n              <div>\n                <label>\n                  <input type=\"checkbox\" className='pos1'/><div className='colorPicker' id='pos1' style={color1}>1</div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos2'/><div className=\"colorPicker\" id='pos2' style={color2}>2</div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos3'/><div className=\"colorPicker\" id='pos3' style={color3}>3</div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos4'/><div className=\"colorPicker\" id='pos4' style={color4}>4</div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos5'/><div className=\"colorPicker\" id='pos5' style={color5}>5</div>\n                </label>\n              </div>\n            </form>}\n            <div>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"red\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"orange\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"yellow\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"green\"></button>\n            </div>\n            <div>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"blue\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"black\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"ivory\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"sienna\"></button>\n            </div>\n          </div>\n        </div>\n        </div>\n            \n      );\n    }\n}","import React, { Component } from 'react';\nimport Game from './game';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Game/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}