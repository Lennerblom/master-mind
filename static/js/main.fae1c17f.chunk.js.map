{"version":3,"sources":["lib/user-reducer.js","lib/store.js","game.js","login.js","dashboard.js","instructions.js","App.js","index.js"],"names":["url","initialState","userFetch","dispatch","fetch","then","res","json","user","console","log","type","payload","userAsyncAdd","appReducer","combineReducers","state","arguments","length","undefined","action","localStorage","setItem","concat","Object","toConsumableArray","map","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","colors","attemptArr","totalAttempt","totalCountArr","color1","background","color2","color3","color4","color5","Game","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gameStart","setState","hiddenView","gameOn","generateRandom","randomArray","count","i","Math","floor","random","push","solution","submitAttempt","tempSolution","tempAttempt","option1","value","option2","option3","option4","option5","unshift","countTotal","blackCount","whiteCount","includes","j","resetColor","onChange","e","val","target","checked","changedBit","defineProperty","name","isChecked","className","_arr","_i3","pos","selectColor","react_default","a","createElement","onClick","color","style","reversed","arrays","score","Component","Login","onSubmit","preventDefault","onComplete","objectSpread","defaultState","username","password","href","Dashboard","updateView","loginView","login_Login","userAdd","viewChange","game_Game","connect","uuid","superagent","post","body","userUpdate","put","_id","send","userDelete","delete","text","Instructions","store","createStore","applyMiddleware","thunk","App","es","react_router_dom","to","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fae1c17f.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\nimport superagent from 'superagent';\nconst url =  'https://localhost:3000/signup/';\n// Actions\nexport const USER_ADD = 'user/ADD';\nexport const USER_ASYNC_ADD = 'user/ASYNC_ADD';\nexport const USER_FETCH = 'user/FETCH';\nexport const USER_UPDATE = 'user/UPDATE';\nexport const USER_DELETE = 'user/DELETE';\n\n// Reducer\nlet initialState = [];\nexport default (state = initialState, action) => {\n  let {type, payload} = action;\n  switch (type) {\n  case USER_ADD:\n    localStorage.setItem('state', 'state');\n    return [...state, payload];\n  case USER_FETCH:\n    return [...state, payload];\n  case USER_ASYNC_ADD:\n    return [...state, ...payload];\n  case USER_UPDATE: \n    return [...state && state.map(user => user.id === payload.id ? payload : user)];\n  case USER_DELETE: \n    return state.filter(user => user.id !== payload.id);\n  default: return state;\n  }\n};\n\n// Action Creators\nexport const userAdd = (user) => {\n  console.log('addReducer', user);\n  user.id = uuid();\n  return dispatch => {\n    superagent.post(url, user)\n      .then(res => {\n        dispatch({type: USER_ADD, payload: res.body});\n      });\n  };\n};\n\nexport const userAsyncAdd = (user) => {\n  console.log('inside action creator', user);\n  return {\n    type: USER_ASYNC_ADD,\n    payload: user,\n  };\n};\nexport const userFetch = () => {\n  return dispatch => {\n    fetch(url)\n      .then(function(res) { \n        return res.json();\n      })\n      .then((user) => {\n        console.log('fetch data: ', user);\n        dispatch(userAsyncAdd(user));\n      });\n  };\n};\n\nexport const userUpdate = (user) => {\n  return dispatch => {\n    superagent.put(`${url}/${user._id}`)\n      .send(user)\n      .then(() => {\n        dispatch({ \n          type: USER_UPDATE,\n          payload: user,\n        });\n      });\n  };\n   \n};\nexport const userDelete = (user) => {\n  return dispatch => {\n    superagent.delete(`${url}/${user._id}`)\n      .then(res => {\n        return res.text;\n      })\n      .then(() => {\n        dispatch(\n          {type: USER_DELETE,\n            payload: user,\n          });\n      });\n  };\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './user-reducer';\n\nconst appReducer = combineReducers({user: userReducer});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default () => createStore(appReducer, composeEnhancers(applyMiddleware(thunk)));\n","import React, { Component } from 'react';\nconst colors = ['red', 'orange', 'yellow', 'green', 'blue', 'black', 'ivory', 'sienna'];\n\nlet attemptArr = [];\nlet totalAttempt = [];\nlet totalCountArr = [];\n\n\nlet color1 = {background:'transparent'};\nlet color2 = {background:'transparent'};\nlet color3 = {background:'transparent'};\nlet color4 = {background:'transparent'};\nlet color5 = {background:'transparent'};\nlet winningMsg = 'You won!';\n\nexport default class Game extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      hiddenView: false,\n      solution: [],\n      option1: {value: 'transparent', checked: false},\n      option2: {value: 'transparent', checked: false},\n      option3: {value: 'transparent', checked: false},\n      option4: {value: 'transparent', checked: false},\n      option5: {value: 'transparent', checked: false},\n      gameOn: false,\n    };\n  }\n\n  gameStart = () => {\n    if(totalAttempt.length > 0){\n      this.setState({hiddenView: false});\n      totalAttempt = [];\n      totalCountArr = [];\n    }\n    this.setState({gameOn: true});\n    this.generateRandom();\n  }\n    generateRandom = () => {\n        let randomArray = [];\n        let count = 0;\n        while(count < 5) {\n            let i = Math.floor(Math.random() * (colors.length));\n            randomArray.push(colors[i]);\n            count++;\n        }\n        console.log(randomArray);\n        this.setState({solution: randomArray});\n        }\n\n    submitAttempt = () => {\n      let tempSolution = [];\n      let tempAttempt = [];\n\n        if(this.state.option1.value !== 'transparent' && this.state.option2.value !== 'transparent' && this.state.option3.value !== 'transparent' && this.state.option4.value !== 'transparent'   && this.state.option5.value !== 'transparent'){\n          attemptArr = [];\n          attemptArr.push(this.state.option1.value);\n          attemptArr.push(this.state.option2.value);\n          attemptArr.push(this.state.option3.value);\n          attemptArr.push(this.state.option4.value);\n          attemptArr.push(this.state.option5.value);\n          console.log('attemptArr', attemptArr)\n          totalAttempt.unshift(attemptArr);\n          if(this.state.solution[0]===attemptArr[0] && this.state.solution[1]===attemptArr[1] && this.state.solution[2]===attemptArr[2] && this.state.solution[3]===attemptArr[3] && this.state.solution[4]===attemptArr[4]){\n            this.setState({hiddenView: true});\n            console.log('you win');\n          }\n          else {\n            let countTotal = [];\n            let blackCount = '';\n            let whiteCount = '';\n            let noScore = 'orangered';\n\n            for(let i = 0; i < 5; i++){\n              tempSolution.push(this.state.solution[i]);\n              tempAttempt.push(attemptArr[i]);\n            }\n            for(let i = 0; i < 5; i++){\n              if(tempSolution[i] === tempAttempt[i]){\n                tempSolution[i] = 'used-blk';\n                tempAttempt[i] = 'checked';\n                blackCount = 'black'; \n                countTotal.push(blackCount);\n              }\n            }\n\n            for(let i = 0; i < 5; i++){\n              if(tempSolution.includes(tempAttempt[i])){\n                for(let j = 0; j < 5; j++){\n                  if(tempSolution[j] === tempAttempt[i]){\n                    tempSolution[j] = 'found-white';\n                    tempAttempt[i] = 'checked';\n                    whiteCount = 'ivory';\n                    countTotal.push(whiteCount);\n                    break;\n                  }\n                }\n              }\n            }\n\n            if(countTotal.length === 0){\n              countTotal.push(noScore);\n            }\n            totalCountArr.unshift(countTotal);\n          }\n        }\n          this.resetColor();\n    }\n       \n    \n    onChange = (e) => {\n        const val =\n        e.target.type === \"checkbox\"\n          ? e.target.checked\n          : e.target.value;\n    \n      const changedBit = {\n        [e.target.name]: val\n      };\n      this.setState(changedBit);\n    }\n    isChecked = (e) => {\n        let position = ['pos1', 'pos2', 'pos3', 'pos4', 'pos5'];\n        let val = e.target.className;\n        for(let pos of position){\n          if(pos === val){\n            val = pos;\n            \n            if(val === 'pos1' && this.state.option1.checked === false){\n              this.setState({option1: {checked: true}});\n            }\n            if(val === 'pos2' && this.state.option2.checked === false){\n              this.setState({option2: {checked: true}});\n            }\n            if(val === 'pos3' && this.state.option3.checked === false){\n              this.setState({option3: {checked: true}});\n            }\n            if(val === 'pos4' && this.state.option4.checked === false){\n              this.setState({option4: {checked: true}});\n            }\n            if(val === 'pos5' && this.state.option5.checked === false){\n              this.setState({option5: {checked: true}});\n            }\n          }\n        }\n      }\n    selectColor = (e) => {\n      let val = e.target.id\n      if(this.state.option1.checked === true){\n        this.setState({option1: {value: val, checked: false}});\n        color1 = {background: val};\n      }\n      if(this.state.option2.checked === true){\n        this.setState({option2: {value: val, checked: false}});\n        color2 = {background: val};\n      }\n      if(this.state.option3.checked === true){\n        this.setState({option3: {value: val, checked: false}});\n        color3 = {background: val};\n      }\n      if(this.state.option4.checked === true){\n        this.setState({option4: {value: val, checked: false}});\n        color4 = {background: val};\n      }\n      if(this.state.option5.checked === true){\n        this.setState({option5: {value: val, checked: false}});\n        color5 = {background: val};\n      }   \n    }\n\n    resetColor = () => {\n      this.setState({option1: {value: 'transparent', checked: false}});\n      color1 = {background: 'transparent'};\n      this.setState({option2: {value: 'transparent', checked: false}});\n      color2 = {background: 'transparent'};\n      this.setState({option3: {value: 'transparent', checked: false}});\n      color3 = {background: 'transparent'};\n      this.setState({option4: {value: 'transparent', checked: false}});\n      color4 = {background: 'transparent'};\n      this.setState({option5: {value: 'transparent', checked: false}});\n      color5 = {background: 'transparent'};\n    }\n\n    render() {\n\n      return (\n        <div className='main-container'>\n          <h2>Mastermind</h2>    \n          <button className='new-game-button' onClick={this.gameStart}>new game</button>\n          <button className='submit-button' onClick={this.submitAttempt}>submit</button>\n\n          <div className='game-board-container'>\n\n                {this.state.hiddenView && <div className='hidden-solution'>{this.state.solution.map(color => <div style={{background: color}} className='colorPosition'></div>)}<h2>{winningMsg}</h2></div>}\n                \n          <div className='attempt-container'>\n            <ol reversed={true} className='attempt-row'>{totalAttempt.map(arrays => \n              <li>{arrays.map(color => <div className='colorPosition' style={{background: color}}></div> )}</li>)}\n            </ol>\n          </div>\n          <div className='attempt-container'>\n            <ul className='attempt-row'>{totalCountArr.map(count => \n              <li>{count.map(score => \n                <div className='score' style={{background: score}}></div>)}\n              </li>)}\n            </ul>\n          </div>\n\n          <div className='guess-container'>\n            {this.state.gameOn && <form onChange={this.isChecked}>\n              <div>\n                <label>\n                  <input type=\"checkbox\" className='pos1'/><div className='colorPicker' id='pos1' style={color1}></div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos2'/><div className=\"colorPicker\" id='pos2' style={color2}></div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos3'/><div className=\"colorPicker\" id='pos3' style={color3}></div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos4'/><div className=\"colorPicker\" id='pos4' style={color4}></div>\n                </label>\n                <label>\n                  <input type=\"checkbox\" className='pos5'/><div className=\"colorPicker\" id='pos5' style={color5}></div>\n                </label>\n              </div>\n            </form>}\n            <div>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"red\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"orange\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"yellow\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"green\"></button>\n            </div>\n            <div>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"blue\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"black\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"ivory\"></button>\n              <button className=\"colorChoices\" onClick={this.selectColor} id=\"sienna\"></button>\n            </div>\n          </div>\n        </div>\n        </div>\n            \n      );\n    }\n}","import React, { Component } from 'react';\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            username: '',\n            password: '',\n        };\n        const initialState = this.props.user || this.defaultState;\n\n        this.state = {...initialState}\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        //this.props.viewChange();\n        this.props.onComplete(this.state); \n        this.setState({...this.defaultState});\n    };\n    onChange = (e) => {\n      const val =\n      e.target.type === \"checkbox\"\n        ? e.target.checked\n        : e.target.value;\n  \n    const changedBit = {\n      [e.target.name]: val\n    };\n    this.setState(changedBit);\n    }\n    render() {\n        return (\n            <div>\n              <nav>\n                <ul>\n                  <li className=\"nav-li\"><a href=\"/mastermind/\">home</a></li>\n                  <li className=\"nav-li\"><a href=\"/#/instructions\">How To Play</a></li>\n                  {/* <li className=\"nav-li\"><a href=\"/#/login\">login</a></li> */}\n                </ul>\n              </nav>\n                <fieldset className=\"login-form\">\n                <form onSubmit={this.onSubmit} onChange={this.onChange}>\n                <label>Username:\n                  <input type=\"text\" name=\"username\" value={this.state.username}/>\n                </label>\n\n                <label>Password:\n                  <input name=\"password\" type=\"password\" value={this.state.password}/>\n                </label>\n                <label>\n                  <input type=\"submit\" value=\"Create User\" />\n                </label>\n            </form>\n            </fieldset>\n            \n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Game from './game';\nimport Login from './login';\nimport { connect } from 'react-redux';\n\nimport {userAdd, userDelete, userUpdate, userFetch } from './lib/user-reducer';\n\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            loginView: false,\n        } \n    }\n\n    updateView = () => {\n        this.setState({loginView: false});\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.loginView && <Login onComplete={this.props.userAdd} viewChange={this.updateView}/>}\n                <Game/>\n            </div>\n            \n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    userAdd: user => dispatch(userAdd(user)),\n    userUpdate: user => dispatch(userUpdate(user)),\n    userFetch: user => dispatch(userFetch(user)),\n    userDelete: user => dispatch(userDelete(user)), \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\n\n\nexport default class Instructions extends Component {\n    render() {\n        return (\n          <div className=\"instructions-container\">\n            <h2>How to play Mastermind</h2>\n            <div className=\"instructions-paragraph\">\n              <p>Mastermind is a classic logic game where you try to replicate the hidden color sequence based off of clues provided from each attempt.  The game is won when you successfully place all five colors in the right order.  The hidden solution is randomly selected and may contain any combintion from the eight colors including doubles, triples etc.</p>\n              <p>To begin, click the New Game button.  Click the empty circles and assign each a color from the eight colors at the bottom.  Once all five circles in the attempt area have a color assigned, hit the submit button.\n              </p>\n              <p>Each attempt is scored with black, white or red pegs.  Black pegs are scored first followed by white.  You earn a black peg for each correct color in the correct location in the sequence.  A white peg represents a color in the sequence, but not in the correct location.  A red peg indicates no colors in the attempt are present in the solution.  Through these clues, you can make logical deductions to solve the colored sequence.\n              </p> \n            </div>\n          </div>\n            \n        );\n    }\n}","import React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport {HashRouter, Route, Switch, Link} from 'react-router-dom';\nimport createStore from './lib/store.js';\nimport Dashboard from './dashboard';\nimport Instructions from './instructions';\nimport Game from './game';\nimport Login from './login';\nimport './App.scss';\n\nconst store = createStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Provider store={store}>\n        <HashRouter>\n        <nav>\n            <ul>\n            <li className=\"nav-li\"><Link to=\"/\">home</Link></li>\n                  <li className=\"nav-li\"><Link to=\"/instructions\">How To Play</Link></li>\n              {/* <li className=\"nav-li\"><a href=\"/#/login\">login</a></li> */}\n            </ul>\n          </nav>\n                  <Switch>\n                    <Route exact path=\"/\" component={Dashboard}/>\n                    <Route exact path=\"/game\" component={Game}/>\n                    <Route exact path=\"/instructions\" component={Instructions}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                  </Switch>\n              </HashRouter>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}